plugins {
    id 'com.android.application'
    id 'com.google.protobuf'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.stt'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.stt"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            proto {
                srcDir 'src/main/proto'
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    buildToolsVersion '28.0.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.api.grpc:grpc-google-cloud-speech-v1p1beta1:2.15.0'
    implementation 'com.google.flogger:flogger:0.7.4'

    implementation 'com.google.code.gson:gson:2.10.1' // Replace with the latest version


    implementation 'com.google.flogger:flogger-system-backend:0.7.4'
    implementation 'com.google.protobuf:protobuf-java:3.23.2'
    implementation 'com.google.protobuf:protobuf-java-util:3.21.12'
    implementation 'joda-time:joda-time:2.12.5'
    implementation 'io.grpc:grpc-okhttp:1.56.1'
    testImplementation 'junit:junit:4.13.2'
    //noinspection GradleCompatible
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.8.0'

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    remove java
                }
                task.builtins {
                    java {}
                }
            }
        }
    }
}